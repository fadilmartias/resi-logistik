/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ (() => {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*\r\nTemplate Name: Dason - Bootstrap 5 Admin & Dashboard Template\r\nAuthor: Themesdesign\r\nVersion: 1.2.0.\r\nWebsite: https://themesdesign.in/\r\nContact: themesdesign.in@gmail.com\r\nFile: Main Js File\r\n*/\n(function ($) {\n  'use strict';\n\n  var language = localStorage.getItem('Dason-language'); // Default Language\n\n  var default_lang = 'en';\n\n  function setLanguage(lang) {\n    if (document.getElementById(\"header-lang-img\")) {\n      if (lang == 'en') {\n        document.getElementById(\"header-lang-img\").src = \"assets/images/flags/us.jpg\";\n      } else if (lang == 'sp') {\n        document.getElementById(\"header-lang-img\").src = \"assets/images/flags/spain.jpg\";\n      } else if (lang == 'gr') {\n        document.getElementById(\"header-lang-img\").src = \"assets/images/flags/germany.jpg\";\n      } else if (lang == 'it') {\n        document.getElementById(\"header-lang-img\").src = \"assets/images/flags/italy.jpg\";\n      } else if (lang == 'ru') {\n        document.getElementById(\"header-lang-img\").src = \"assets/images/flags/russia.jpg\";\n      }\n\n      localStorage.setItem('Dason-language', lang);\n      language = localStorage.getItem('Dason-language');\n      getLanguage();\n    }\n  } // Multi language setting\n\n\n  function getLanguage() {\n    language == null ? setLanguage(default_lang) : false;\n    $.getJSON('assets/lang/' + language + '.json', function (lang) {\n      $('html').attr('lang', language);\n      $.each(lang, function (index, val) {\n        index === 'head' ? $(document).attr(\"title\", val['title']) : false;\n        $(\"[data-key='\" + index + \"']\").text(val);\n      });\n    });\n  }\n\n  function initMetisMenu() {\n    //metis menu\n    $(\"#side-menu\").metisMenu();\n  }\n\n  function initCounterNumber() {\n    var counter = document.querySelectorAll('.counter-value');\n    var speed = 250; // The lower the slower\n\n    counter.forEach(function (counter_value) {\n      function updateCount() {\n        var target = +counter_value.getAttribute('data-target');\n        var count = +counter_value.innerText;\n        var inc = target / speed;\n\n        if (inc < 1) {\n          inc = 1;\n        } // Check if target is reached\n\n\n        if (count < target) {\n          // Add inc to count and output in counter_value\n          counter_value.innerText = (count + inc).toFixed(0); // Call function every ms\n\n          setTimeout(updateCount, 1);\n        } else {\n          counter_value.innerText = target;\n        }\n      }\n\n      ;\n      updateCount();\n    });\n  }\n\n  function initLeftMenuCollapse() {\n    var currentSIdebarSize = document.body.getAttribute('data-sidebar-size');\n    $(window).on('load', function () {\n      $('.switch').on('switch-change', function () {\n        toggleWeather();\n      });\n      var isAttributes = document.querySelector('body');\n\n      var _iterator = _createForOfIteratorHelper(isAttributes.getAttributeNames()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var name = _step.value;\n          var value = isAttributes.getAttribute(name);\n          localStorage.setItem(name, value);\n\n          if (document.body.hasAttribute(\"data-sidebar\")) {\n            localStorage.removeItem(\"data-topbar\");\n          } else if (document.body.hasAttribute(\"data-topbar\")) {\n            localStorage.removeItem(\"data-sidebar\");\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (document.body.hasAttribute(\"data-topbar\" == \"light\")) {\n        updateRadio('topbar-color-light');\n      }\n\n      if (window.innerWidth >= 1024 && window.innerWidth <= 1366) {\n        document.body.setAttribute('data-sidebar-size', 'sm');\n        updateRadio('sidebar-size-small');\n      }\n    });\n    $('#vertical-menu-btn').on('click', function (event) {\n      event.preventDefault();\n      $('body').toggleClass('sidebar-enable');\n\n      if ($(window).width() >= 992) {\n        if (currentSIdebarSize == null) {\n          document.body.getAttribute('data-sidebar-size') == null || document.body.getAttribute('data-sidebar-size') == \"lg\" ? document.body.setAttribute('data-sidebar-size', 'sm') : document.body.setAttribute('data-sidebar-size', 'lg');\n        } else if (currentSIdebarSize == \"md\") {\n          document.body.getAttribute('data-sidebar-size') == \"md\" ? document.body.setAttribute('data-sidebar-size', 'sm') : document.body.setAttribute('data-sidebar-size', 'md');\n        } else {\n          document.body.getAttribute('data-sidebar-size') == \"sm\" ? document.body.setAttribute('data-sidebar-size', 'lg') : document.body.setAttribute('data-sidebar-size', 'sm');\n        }\n      }\n    });\n  }\n\n  function initActiveMenu() {\n    // === following js will activate the menu in left side bar based on url ====\n    $(\"#sidebar-menu a\").each(function () {\n      var pageUrl = window.location.href.split(/[?#]/)[0];\n\n      if (this.href == pageUrl) {\n        $(this).addClass(\"active\");\n        $(this).parent().addClass(\"mm-active\"); // add active to li of the current link\n\n        $(this).parent().parent().addClass(\"mm-show\");\n        $(this).parent().parent().prev().addClass(\"mm-active\"); // add active class to an anchor\n\n        $(this).parent().parent().parent().addClass(\"mm-active\");\n        $(this).parent().parent().parent().parent().addClass(\"mm-show\"); // add active to li of the current link\n\n        $(this).parent().parent().parent().parent().parent().addClass(\"mm-active\");\n      }\n    });\n  }\n\n  function initMenuItemScroll() {\n    // focus active menu in left sidebar\n    $(document).ready(function () {\n      if ($(\"#sidebar-menu\").length > 0 && $(\"#sidebar-menu .mm-active .active\").length > 0) {\n        var activeMenu = $(\"#sidebar-menu .mm-active .active\").offset().top;\n\n        if (activeMenu > 300) {\n          activeMenu = activeMenu - 300;\n          $(\".vertical-menu .simplebar-content-wrapper\").animate({\n            scrollTop: activeMenu\n          }, \"slow\");\n        }\n      }\n    });\n  }\n\n  function initHoriMenuActive() {\n    $(\".navbar-nav a\").each(function () {\n      var pageUrl = window.location.href.split(/[?#]/)[0];\n\n      if (this.href == pageUrl) {\n        $(this).addClass(\"active\");\n        $(this).parent().addClass(\"active\");\n        $(this).parent().parent().addClass(\"active\");\n        $(this).parent().parent().parent().addClass(\"active\");\n        $(this).parent().parent().parent().parent().addClass(\"active\");\n        $(this).parent().parent().parent().parent().parent().addClass(\"active\");\n        $(this).parent().parent().parent().parent().parent().parent().addClass(\"active\");\n      }\n    });\n  }\n\n  function initFullScreen() {\n    $('[data-toggle=\"fullscreen\"]').on(\"click\", function (e) {\n      e.preventDefault();\n      $('body').toggleClass('fullscreen-enable');\n\n      if (!document.fullscreenElement &&\n      /* alternative standard method */\n      !document.mozFullScreenElement && !document.webkitFullscreenElement) {\n        // current working methods\n        if (document.documentElement.requestFullscreen) {\n          document.documentElement.requestFullscreen();\n        } else if (document.documentElement.mozRequestFullScreen) {\n          document.documentElement.mozRequestFullScreen();\n        } else if (document.documentElement.webkitRequestFullscreen) {\n          document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n        }\n      } else {\n        if (document.cancelFullScreen) {\n          document.cancelFullScreen();\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen();\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen();\n        }\n      }\n    });\n    document.addEventListener('fullscreenchange', exitHandler);\n    document.addEventListener(\"webkitfullscreenchange\", exitHandler);\n    document.addEventListener(\"mozfullscreenchange\", exitHandler);\n\n    function exitHandler() {\n      if (!document.webkitIsFullScreen && !document.mozFullScreen && !document.msFullscreenElement) {\n        $('body').removeClass('fullscreen-enable');\n      }\n    }\n  }\n\n  function initDropdownMenu() {\n    if (document.getElementById(\"topnav-menu-content\")) {\n      var elements = document.getElementById(\"topnav-menu-content\").getElementsByTagName(\"a\");\n\n      for (var i = 0, len = elements.length; i < len; i++) {\n        elements[i].onclick = function (elem) {\n          if (elem && elem.target && elem.target.getAttribute(\"href\") === \"#\") {\n            elem.target.parentElement.classList.toggle(\"active\");\n            if (elem.target.nextElementSibling) elem.target.nextElementSibling.classList.toggle(\"show\");\n          }\n        };\n      }\n\n      window.addEventListener(\"resize\", updateMenu);\n    }\n  }\n\n  function updateMenu() {\n    var elements = document.getElementById(\"topnav-menu-content\").getElementsByTagName(\"a\");\n\n    for (var i = 0, len = elements.length; i < len; i++) {\n      if (elements[i] && elements[i].parentElement && elements[i].parentElement.getAttribute(\"class\") === \"nav-item dropdown active\") {\n        elements[i].parentElement.classList.remove(\"active\");\n        if (elements[i].nextElementSibling) elements[i].nextElementSibling.classList.remove(\"show\");\n      }\n    }\n  }\n\n  function initComponents() {\n    // tooltip\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl);\n    }); // popover\n\n    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"popover\"]'));\n    var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {\n      return new bootstrap.Popover(popoverTriggerEl);\n    }); // toast\n\n    var toastElList = [].slice.call(document.querySelectorAll('.toast'));\n    var toastList = toastElList.map(function (toastEl) {\n      return new bootstrap.Toast(toastEl);\n    });\n  }\n\n  function initPreloader() {\n    $(window).on('load', function () {\n      $('#status').fadeOut();\n      $('#preloader').delay(350).fadeOut('slow');\n    });\n  }\n\n  function initSettings() {\n    if (window.sessionStorage) {\n      var alreadyVisited = sessionStorage.getItem(\"is_visited\");\n\n      if (!alreadyVisited) {\n        sessionStorage.setItem(\"is_visited\", \"layout-ltr\");\n      } else {\n        $(\"#\" + alreadyVisited).prop('checked', true); // changeDirection(alreadyVisited);\n      }\n    } // show password input value\n\n\n    $(\"#password-addon\").on('click', function () {\n      if ($(this).siblings('input').length > 0) {\n        $(this).siblings('input').attr('type') == \"password\" ? $(this).siblings('input').attr('type', 'input') : $(this).siblings('input').attr('type', 'password');\n      }\n    });\n  }\n\n  function initLanguage() {\n    // Auto Loader\n    if (language && language != \"null\" && language !== default_lang) setLanguage(language);\n    $('.language').on('click', function (e) {\n      setLanguage($(this).attr('data-lang'));\n    });\n  }\n\n  function initFeathericon() {\n    feather.replace();\n  }\n\n  function initCheckAll() {\n    $('#checkAll').on('change', function () {\n      $('.table-check .form-check-input').prop('checked', $(this).prop(\"checked\"));\n    });\n    $('.table-check .form-check-input').change(function () {\n      if ($('.table-check .form-check-input:checked').length == $('.table-check .form-check-input').length) {\n        $('#checkAll').prop('checked', true);\n      } else {\n        $('#checkAll').prop('checked', false);\n      }\n    });\n  }\n\n  function updateRadio(radioId) {\n    if (radioId !== null) document.getElementById(radioId).checked = true;\n  }\n\n  function layoutSetting() {\n    var body = document.getElementsByTagName(\"body\")[0]; // right side-bar toggle\n\n    $('.right-bar-toggle').on('click', function (e) {\n      $('body').toggleClass('right-bar-enabled');\n    });\n    $('#mode-setting-btn').on('click', function (e) {\n      if (body.hasAttribute(\"data-layout-mode\") && body.getAttribute(\"data-layout-mode\") == \"dark\") {\n        if (localStorage.getItem(\"data-sidebar\") == 'dark' && body.getAttribute(\"data-layout\") !== \"horizontal\") {\n          document.body.setAttribute('data-sidebar', 'dark');\n        }\n\n        if (localStorage.getItem(\"data-topbar\") == 'dark' && body.getAttribute(\"data-layout\") !== \"horizontal\") {\n          document.body.setAttribute('data-sidebar', 'light');\n          document.body.setAttribute('data-topbar', 'dark');\n        }\n\n        document.body.setAttribute('data-layout-mode', 'light');\n\n        if (localStorage.getItem(\"data-topbar\") !== 'dark') {\n          document.body.setAttribute('data-topbar', 'light');\n          updateRadio('topbar-color-light');\n        }\n\n        if (localStorage.getItem(\"data-sidebar\") == 'brand') {\n          document.body.setAttribute('data-sidebar', 'brand');\n        }\n\n        if (!localStorage.getItem(\"data-sidebar\") && !localStorage.getItem(\"data-topbar\")) {\n          document.body.removeAttribute('data-sidebar');\n        }\n      } else {\n        if (localStorage.getItem(\"data-sidebar\") == 'dark') {\n          document.body.setAttribute('data-sidebar', 'dark');\n        }\n\n        document.body.setAttribute('data-layout-mode', 'dark');\n        document.body.setAttribute('data-topbar', 'dark');\n        document.body.setAttribute('data-sidebar', 'dark');\n      }\n    });\n    $(document).on('click', 'body', function (e) {\n      if ($(e.target).closest('.right-bar-toggle, .right-bar').length > 0) {\n        return;\n      }\n\n      $('body').removeClass('right-bar-enabled');\n      return;\n    });\n\n    if (body.hasAttribute(\"data-layout\") && body.getAttribute(\"data-layout\") == \"horizontal\") {\n      updateRadio('layout-horizontal');\n      $(\".sidebar-setting\").hide();\n    } else {\n      updateRadio('layout-vertical');\n    }\n\n    body.hasAttribute(\"data-layout-mode\") && body.getAttribute(\"data-layout-mode\") == \"dark\" ? updateRadio('layout-mode-dark') : updateRadio('layout-mode-light');\n    body.hasAttribute(\"data-layout-size\") && body.getAttribute(\"data-layout-size\") == \"boxed\" ? updateRadio('layout-width-boxed') : updateRadio('layout-width-fuild');\n    body.hasAttribute(\"data-layout-scrollable\") && body.getAttribute(\"data-layout-scrollable\") == \"true\" ? updateRadio('layout-position-scrollable') : updateRadio('layout-position-fixed');\n\n    if (body.getAttribute(\"data-topbar\") == \"light\") {\n      updateRadio('topbar-color-light');\n    } else if (body.getAttribute(\"data-topbar\") == \"dark\") {\n      updateRadio('topbar-color-dark');\n    } else {\n      updateRadio('topbar-color-light');\n    }\n\n    body.hasAttribute(\"data-sidebar-size\") && body.getAttribute(\"data-sidebar-size\") == \"sm\" ? updateRadio('sidebar-size-small') : body.hasAttribute(\"data-sidebar-size\") && body.getAttribute(\"data-sidebar-size\") == \"md\" ? updateRadio('sidebar-size-compact') : updateRadio('sidebar-size-default');\n    body.hasAttribute(\"data-sidebar\") && body.getAttribute(\"data-sidebar\") == \"brand\" ? updateRadio('sidebar-color-brand') : body.hasAttribute(\"data-sidebar\") && body.getAttribute(\"data-sidebar\") == \"dark\" ? updateRadio('sidebar-color-dark') : updateRadio('sidebar-color-light');\n    document.getElementsByTagName(\"html\")[0].hasAttribute(\"dir\") && document.getElementsByTagName(\"html\")[0].getAttribute(\"dir\") == \"rtl\" ? updateRadio('layout-direction-rtl') : updateRadio('layout-direction-ltr'); // on layou change\n\n    $(\"input[name='layout']\").on('change', function () {\n      window.location.href = $(this).val() == \"vertical\" ? \"index.html\" : \"layouts-horizontal.html\";\n    }); // on layout mode change\n\n    $(\"input[name='layout-mode']\").on('change', function () {\n      if ($(this).val() == \"light\") {\n        document.body.setAttribute('data-layout-mode', 'light');\n        document.body.setAttribute('data-topbar', 'light');\n        document.body.setAttribute('data-sidebar', 'light');\n        body.hasAttribute(\"data-layout\") && body.getAttribute(\"data-layout\") == \"horizontal\" ? '' : document.body.setAttribute('data-sidebar', 'light');\n        updateRadio('topbar-color-light');\n        updateRadio('sidebar-color-light');\n      } else {\n        document.body.setAttribute('data-layout-mode', 'dark');\n        document.body.setAttribute('data-topbar', 'dark');\n        document.body.setAttribute('data-sidebar', 'dark');\n        body.hasAttribute(\"data-layout\") && body.getAttribute(\"data-layout\") == \"horizontal\" ? '' : document.body.setAttribute('data-sidebar', 'dark'); // updateRadio('topbar-color-dark')\n\n        updateRadio('sidebar-color-dark');\n      }\n    }); // on RTL-LTR mode change\n\n    $(\"input[name='layout-direction']\").on('change', function () {\n      if ($(this).val() == \"ltr\") {\n        document.getElementsByTagName(\"html\")[0].removeAttribute(\"dir\");\n        document.getElementById('bootstrap-style').setAttribute('href', 'assets/css/bootstrap.min.css');\n        document.getElementById('app-style').setAttribute('href', 'assets/css/app.min.css');\n      } else {\n        document.getElementById('bootstrap-style').setAttribute('href', 'assets/css/bootstrap-rtl.min.css');\n        document.getElementById('app-style').setAttribute('href', 'assets/css/app-rtl.min.css');\n        document.getElementsByTagName(\"html\")[0].setAttribute(\"dir\", \"rtl\");\n      }\n    });\n  }\n\n  function init() {\n    initMetisMenu();\n    initCounterNumber();\n    initLeftMenuCollapse();\n    initActiveMenu();\n    initMenuItemScroll();\n    initHoriMenuActive();\n    initFullScreen();\n    initDropdownMenu();\n    initComponents();\n    initSettings();\n    initLanguage();\n    initFeathericon();\n    initPreloader();\n    layoutSetting();\n    Waves.init();\n    initCheckAll();\n  }\n\n  init();\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz9hODBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./resources/sass/app.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;